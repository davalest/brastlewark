{"version":3,"sources":["resources/utils.js","resources/strings.js","components/profile/ProfileCard.js","components/header/SearchBar.js","components/header/Header.js","components/list/CitizenList.js","scenes/Home.js","serviceWorker.js","index.js"],"names":["getPathArray","window","location","pathname","split","getCookie","c_name","document","cookie","length","c_start","indexOf","c_end","unescape","substring","strings","es","search","name","age","weight","height","hair_color","professions","friends","select_name","en","DEFAULT_LANGUAGE","lang","undefined","currentLanguage","navigator","userLanguage","substr","language","getElementsByTagName","setAttribute","changeLanguage","newLang","value","days","expires","date","Date","setTime","getTime","toGMTString","createCookie","url","arguments","match","replace","concat","addLangToPath","getString","key","rsrcs","useStyles","makeStyles","theme","root","padding","spacing","flex","avatar","margin","width","label","fontWeight","color","icons","position","bottom","right","zIndex","&:focus","outline","ProfileCard","props","classes","react_default","a","createElement","className","Fab","size","aria-label","onClick","setOnClickBack","ArrowBack_default","Paper","Avatar","alt","src","profilePicture","Math","round","map","items","index","container","flexGrow","paper","marginTop","left","chip","inputRoot","flexWrap","inputInput","divider","IntegrationDownshift","suggestions","dataSource","downshift_esm","onChange","selection","gnomesInfo","Object","entries","gnomeObj","findIndex","info","onNewRequest","findGnome","itemToString","item","_ref2","getInputProps","getItemProps","getLabelProps","getMenuProps","highlightedIndex","inputValue","isOpen","selectedItem","_getInputProps","placeholder","hintText","onBlur","onFocus","inputProps","objectWithoutProperties","InputProps","ref","other","TextField","assign","style","objectSpread","inputRef","input","renderInput","fullWidth","InputLabelProps","shrink","square","_ref$showEmpty","showEmpty","deburr","trim","toLowerCase","inputLength","count","valuesSuggestions","values","gnome","thumbnail","filter","suggestion","keep","slice","getSuggestions","suggestionProps","itemProps","isHighlighted","isSelected","MenuItem","selected","component","paddingTop","paddingBottom","marginRight","marginBottom","Divider","renderSuggestion","searchBar","top","title","textAlign","Header","elevation","paperContainer","SearchBar","maxSearchResults","desc","b","orderBy","headRows","id","OrderedTableHead","order","onRequestSort","TableHead","TableRow","row","TableCell","sortDirection","TableSortLabel","active","direction","property","event","listStyle","tableWrapper","overflowX","CitizenTable","_useState","useState","_useState2","slicedToArray","setOrder","_useState3","_useState4","setOrderBy","_useState5","_useState6","page","setPage","_useState7","_useState8","rowsPerPage","setRowsPerPage","emptyRows","min","Table","table","aria-labelledby","CitizenList_OrderedTableHead","TableBody","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","hover","tabIndex","setOnRowClick","scope","colSpan","TablePagination","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","target","Home","data","setData","isGnomeSelected","setIsGnomeSelected","selectedGnome","setSelectedGnome","useEffect","searchGnome","fetch","then","response","json","Brastlewark","catch","error","alert","message","header_Header","onGnomeSelected","variant","e","preventDefault","Language_default","profile_ProfileCard","CitizenList","onRowClick","Boolean","hostname","ReactDOM","render","src_scenes_Home","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4d3c382.chunk.js","sourcesContent":["export function getUrlParam(key) {\n    const paramsMap = {};\n    const params = window.location.search.replace(\"?\", \"\").split(\"&\");\n\n    params.forEach((param) => {\n        const paramKeyValue = param.split(\"=\");\n        paramsMap[paramKeyValue[0]] = paramKeyValue[1]\n    });\n\n    return paramsMap[key]\n}\n\nexport function getPathArray() {\n    return window.location.pathname.split(\"/\")\n}\n\nexport function createCookie(name, value, days) {\n    let expires;\n    if (days) {\n        let date = new Date();\n        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n        expires = \"; expires=\" + date.toGMTString();\n    }\n    else {\n        expires = \"\";\n    }\n    document.cookie = name + \"=\" + value + expires + \"; path=/\";\n}\n\nexport function getCookie(c_name) {\n    if (document.cookie.length > 0) {\n        let c_start = document.cookie.indexOf(c_name + \"=\");\n        if (c_start !== -1) {\n            c_start = c_start + c_name.length + 1;\n            let c_end = document.cookie.indexOf(\";\", c_start);\n            if (c_end === -1) {\n                c_end = document.cookie.length;\n            }\n            return unescape(document.cookie.substring(c_start, c_end));\n        }\n    }\n    return undefined;\n}","import { getPathArray, createCookie, getCookie } from \"./utils\";\n\nconst strings = {\n    es: {\n        \"search\": \"Buscar un ciudadano\",\n        \"name\": \"Nombre\",\n        \"age\": \"Edad\",\n        \"weight\": \"Peso\",\n        \"height\": \"Estatura\",\n        \"hair_color\": \"Color de pelo\",\n        \"professions\": \"Profesiones\",\n        \"friends\": \"Amigos\",\n        \"select_name\": \"Selecciona el nombre del ciudadano que buscas\",\n\n    },\n    en: {\n        \"search\": \"Search for a citizen\",\n        \"name\": \"Name\",\n        \"age\": \"Age\",\n        \"weight\": \"Weight\",\n        \"height\": \"Height\",\n        \"hair_color\": \"Hair color\",\n        \"professions\": \"Professions\",\n        \"friends\": \"Friends\",\n        \"select_name\": \"Select the name of the citizen you are looking for\",\n    }\n};\n\nconst DEFAULT_LANGUAGE = \"en\";\n\nconst lang = ( getPathArray().length > 1 && strings[getPathArray()[1]] ) ? getPathArray()[1] : undefined;\n\nexport const currentLanguage = ( lang ) ? lang : (\n    ( getCookie(\"lang\") ) ? getCookie(\"lang\") : (\n        ( window.navigator.userLanguage ) ? window.navigator.userLanguage.substr(0, 2) : (\n            ( window.navigator.language ) ? window.navigator.language.substr(0, 2) : DEFAULT_LANGUAGE\n        )\n    )\n);\n\ndocument.getElementsByTagName(\"html\")[0].setAttribute(\"lang\", currentLanguage);\n\nexport const addLangToPath = (url, newLang = currentLanguage) => {\n    if (url.match(/\\/es\\/|\\/en\\//gi)) {\n        return url.replace(/\\/es\\/|\\/en\\//gi, `/${newLang}/`)\n    } else {\n        return `/${newLang}${url}`\n    }\n};\n\nexport const changeLanguage = (newLang) => {\n    createCookie(\"lang\", newLang);\n    window.location = addLangToPath(window.location.pathname, newLang)\n};\n\nexport default function getString(key) {\n    const rsrcs = strings[currentLanguage];\n    return ( rsrcs ) ? rsrcs[key] : strings[DEFAULT_LANGUAGE][key]\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport { getString } from \"resources\";\nimport ArrowIcon from '@material-ui/icons/ArrowBack';\nimport Fab from '@material-ui/core/Fab';\n\nconst useStyles = makeStyles(theme => ( {\n        root: {\n            padding: theme.spacing(5, 10),\n            flex: 1\n        },\n        avatar: {\n            margin: \"auto\",\n            width: 60,\n            height: 60,\n        },\n        label: {\n            fontWeight: \"bold\",\n            color: \"#1769aa\"\n        },\n        icons: {\n            position: \"fixed\",\n            bottom: 10,\n            right: 10,\n            zIndex: 999,\n            \"&:focus\": {\n                outline: 0\n            }\n        }\n    }\n));\n\nconst ProfileCard = (props) => {\n    const classes = useStyles();\n    return (\n        <div className=\"row\">\n            <Fab size=\"medium\"\n                 color=\"primary\"\n                 aria-label=\"Back\"\n                 className={classes.icons}\n                 onClick={props.setOnClickBack}\n            >\n                <ArrowIcon />\n            </Fab>\n            <div className=\"col-12 d-flex justify-content-center align-items-center\">\n                <Paper className={classes.root}>\n                    <Avatar alt=\"profile picture\"\n                            src={props.profilePicture}\n                            className={classes.avatar}\n                    />\n                    <p className=\"mt-4\">\n                        <span className={classes.label}>{`${getString(\"name\")}:`}</span> {props.name}\n                    </p>\n                    <p>\n                        <span className={classes.label}>{`${getString(\"age\")}:`}</span> {props.age}\n                    </p>\n                    <p>\n                        <span className={classes.label}>{`${getString(\"weight\")}:`}</span> {Math.round(props.weight * 100) / 100}\n                    </p>\n                    <p>\n                        <span className={classes.label}>{`${getString(\"height\")}:`}</span> {Math.round(props.height * 100) / 100}\n                    </p>\n                    <p>\n                        <span className={classes.label}>{`${getString(\"hair_color\")}:`}</span> {props.hair_color}\n                    </p>\n                    <p>\n                        <span className={classes.label}>{`${getString(\"professions\")}: `}</span>\n                    </p>\n                    <ul>{props.professions.map((items, index) => {\n                        return (\n                            <li key={index}>\n                                {items}\n                            </li>\n                        )\n                    })}\n                    </ul>\n                    <p>\n                        <span className={classes.label}>{`${getString(\"friends\")}: `}</span>\n                    </p>\n                    <ul>{props.friends.map((items, index) => {\n                        return (\n                            <li key={index}>\n                                {items}\n                            </li>\n                        )\n                    })}\n                    </ul>\n                </Paper>\n            </div>\n        </div>\n    );\n};\n\nexport default ProfileCard;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport deburr from \"lodash/deburr\";\nimport Downshift from \"downshift\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst useStyles = makeStyles(theme => ( {\n    root: {\n        flex: 1\n    },\n    container: {\n        flexGrow: 1,\n        position: \"relative\"\n    },\n    paper: {\n        position: \"absolute\",\n        zIndex: 1,\n        marginTop: theme.spacing(1),\n        left: 0,\n        right: 0\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.25)\n    },\n    inputRoot: {\n        flexWrap: \"wrap\"\n    },\n    inputInput: {\n        width: \"auto\",\n        flexGrow: 1,\n    },\n    divider: {\n        height: theme.spacing(2)\n    }\n} ));\n\n\nfunction renderInput(inputProps) {\n    const { InputProps, classes, ref, ...other } = inputProps;\n\n    return (\n        <TextField\n            style={{ padding: 15 }}\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput\n                },\n                ...InputProps\n            }}\n            {...other}\n        />\n    );\n}\n\nfunction renderSuggestion(suggestionProps) {\n    const {\n        suggestion,\n        index,\n        itemProps,\n        highlightedIndex,\n        selectedItem\n    } = suggestionProps;\n    const isHighlighted = highlightedIndex === index;\n    const isSelected =\n        ( selectedItem !== null ? selectedItem.name : null || \"\" ).indexOf(\n            suggestion.name\n        ) > -1;\n\n    return (\n        <div key={index}>\n            <MenuItem\n                {...itemProps}\n                key={suggestion.name}\n                selected={isHighlighted}\n                component=\"div\"\n                style={{\n                    fontWeight: isSelected ? 500 : 400,\n                    paddingTop: 21,\n                    paddingBottom: 21\n                }}\n            >\n                <Avatar\n                    alt=\"avatar\"\n                    src={suggestion.avatar}\n                    style={{ marginRight: 20 }}\n                />\n                <div>\n                    <p style={{ marginBottom: 0 }}>{suggestion.name}</p>\n                </div>\n            </MenuItem>\n            <Divider />\n        </div>\n    );\n}\n\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.number,\n    index: PropTypes.number,\n    itemProps: PropTypes.object,\n    selectedItem: PropTypes.object,\n    suggestion: PropTypes.array\n};\n\nfunction getSuggestions(suggestions, value, { showEmpty = false } = {}) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n    const valuesSuggestions = Object.values(suggestions).map(gnome => {\n        const name = gnome.name;\n        const avatar = gnome.thumbnail;\n        return {\n            name,\n            avatar\n        };\n    });\n\n    return inputLength === 0 && !showEmpty\n        ? []\n        : valuesSuggestions.filter(suggestion => {\n            const keep =\n                count < 5 &&\n                suggestion.name.slice(0, inputLength).toLowerCase() ===\n                inputValue;\n            if (keep) {\n                count += 1;\n            }\n            return keep;\n        });\n}\n\n\nfunction findGnome(name, props) {\n    const gnomesInfo = Object.entries(props.dataSource);\n    const gnomesNames = gnomesInfo.map(gnomeObj => {\n        return gnomeObj[1];\n    });\n    const index = gnomesNames.findIndex(info => info.name === name);\n    props.onNewRequest(gnomesInfo[index][1]);\n}\n\nconst IntegrationDownshift = props => {\n    const classes = useStyles();\n    const suggestions = props.dataSource;\n\n    return (\n        <div className={classes.root}>\n            <Downshift\n                onChange={selection => findGnome(selection.name, props)}\n                itemToString={item => ( item ? item.name : \"\" )}\n            >\n                {({\n                      getInputProps,\n                      getItemProps,\n                      getLabelProps,\n                      getMenuProps,\n                      highlightedIndex,\n                      inputValue,\n                      isOpen,\n                      selectedItem\n                  }) => {\n                    const { onBlur, onFocus, ...inputProps } = getInputProps({\n                        placeholder: props.hintText\n                    });\n\n                    return (\n                        <div className={classes.container}>\n                            {renderInput({\n                                fullWidth: true,\n                                classes,\n                                InputLabelProps: getLabelProps({\n                                    shrink: true\n                                }),\n                                InputProps: {\n                                    onBlur,\n                                    onFocus\n                                },\n                                inputProps\n                            })}\n\n                            <div {...getMenuProps()}>\n                                {isOpen ? (\n                                    <Paper className={classes.paper}\n                                           square\n                                    >\n                                        {getSuggestions(\n                                            suggestions,\n                                            inputValue,\n                                            { showEmpty: true }\n                                        ).map((suggestion, index) =>\n                                            renderSuggestion({\n                                                suggestion,\n                                                index,\n                                                itemProps: getItemProps({\n                                                    item: suggestion\n                                                }),\n                                                highlightedIndex,\n                                                selectedItem\n                                            })\n                                        )}\n                                    </Paper>\n                                ) : null}\n                            </div>\n                        </div>\n                    );\n                }}\n            </Downshift>\n        </div>\n    );\n};\nexport default IntegrationDownshift;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport SearchBar from \"./SearchBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    searchBar: {\n        position: \"fixed\",\n        top: 20,\n        left: 0,\n        right: 0,\n        zIndex: 999,\n        width:\"86%\"\n    },\n    title: {\n        textAlign: \"center\",\n        color: \"#1769aa\"\n    }\n});\n\n\nconst Header = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={`${classes.searchBar} container-fluid`}>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <Paper elevation={3}\n                           className={classes.paperContainer}\n                    >\n                        <SearchBar\n                            hintText={props.hintText}\n                            dataSource={props.dataSource}\n                            maxSearchResults={4}\n                            onNewRequest={props.onNewRequest}\n                        />\n                    </Paper>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Header;","import React, { useState } from \"react\";\nimport { getString } from \"resources\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n    return order === \"desc\" ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headRows = [\n    {\n        id: \"thumbnail\",\n        label: \"\"\n    },\n    {\n        id: \"name\",\n        label: getString(\"name\")\n    },\n    {\n        id: \"age\",\n        label: getString(\"age\")\n    },\n    {\n        id: \"weight\",\n        label: getString(\"weight\")\n    },\n    {\n        id: \"height\",\n        label: getString(\"height\")\n    },\n    {\n        id: \"hair_color\",\n        label: getString(\"hair_color\")\n    },\n    {\n        id: \"professions\",\n        label: getString(\"professions\")\n    },\n    {\n        id: \"friends\",\n        label: getString(\"friends\")\n    },\n];\n\nconst OrderedTableHead = (props) => {\n    const { order, orderBy, onRequestSort } = props;\n    const createSortHandler = property => event => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headRows.map(row => (\n                    <TableCell\n                        key={row.id}\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === row.id}\n                            direction={order}\n                            onClick={createSortHandler(row.id)}\n                        >\n                            {row.label}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\n\nconst useStyles = makeStyles(theme => ( {\n    root: {\n        width: \"100%\"\n    },\n    paper: {\n        width: \"100%\",\n        marginBottom: theme.spacing(2),\n    },\n    listStyle: {\n        listStyle: \"none\",\n        padding: 0\n    },\n    avatar: {\n        width: 50,\n        height: 50,\n    },\n    tableWrapper: {\n        overflowX: \"auto\",\n    }\n} ));\n\nconst CitizenTable = (props) => {\n    const classes = useStyles();\n    const [order, setOrder] = useState(\"asc\");\n    const [orderBy, setOrderBy] = useState(\"name\");\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    function handleRequestSort(event, property) {\n        const isDesc = orderBy === property && order === \"desc\";\n        setOrder(isDesc ? \"asc\" : \"desc\");\n        setOrderBy(property);\n    }\n\n    function handleChangePage(event, newPage) {\n        setPage(newPage);\n    }\n\n    function handleChangeRowsPerPage(event) {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    }\n\n    const handleClick = (event, name) => {\n        props.setOnRowClick(name)\n    };\n\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.items.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <div className={classes.tableWrapper}>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size=\"medium\"\n                    >\n                        <OrderedTableHead\n                            row={props.items}\n                            order={order}\n                            orderBy={orderBy}\n                            onRequestSort={handleRequestSort}\n                        />\n                        <TableBody>\n                            {stableSort(props.items, getSorting(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    return (\n                                        <TableRow\n                                            hover\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            onClick={event => handleClick(event, row)}\n                                        >\n                                            <TableCell>\n                                                <Avatar alt=\"profile picture\"\n                                                        src={row.thumbnail}\n                                                        className={classes.avatar}\n                                                />\n                                            </TableCell>\n                                            <TableCell component=\"th\"\n                                                       id={index}\n                                                       scope=\"row\"\n\n                                            >\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell>{row.age}</TableCell>\n                                            <TableCell>{Math.round(row.weight * 100) / 100}</TableCell>\n                                            <TableCell>{Math.round(row.height * 100) / 100}</TableCell>\n                                            <TableCell>{row.hair_color}</TableCell>\n                                            <TableCell>{row.professions.map((item, index) => {\n                                                return (\n                                                    <li key={index}\n                                                        className={classes.listStyle}\n                                                    >\n                                                        - {item}\n                                                    </li>\n                                                )\n\n                                            })}</TableCell>\n                                            <TableCell>{row.friends.map((item, index) => {\n                                                return (\n                                                    <li key={index}\n                                                        className={classes.listStyle}\n                                                    >\n                                                        - {item}\n                                                    </li>\n                                                )\n\n                                            })}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 49 * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </div>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={props.items.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    backIconButtonProps={{\n                        \"aria-label\": \"Previous Page\",\n                    }}\n                    nextIconButtonProps={{\n                        \"aria-label\": \"Next Page\",\n                    }}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n};\n\nexport default CitizenTable;\n","import React, { useState, useEffect } from 'react';\nimport \"./Home.css\";\nimport { getString, changeLanguage, currentLanguage } from \"resources\";\nimport ProfileCard from \"../components/profile/ProfileCard\";\nimport Header from \"../components/header/Header\";\nimport CitizenList from \"../components/list/CitizenList\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport Language from '@material-ui/icons/Language';\n\nconst useStyles = makeStyles(theme => ( {\n    language: {\n        margin: theme.spacing(1),\n        \"&:focus\": {\n            outline: 0\n        }\n    }\n} ));\n\n\nconst Home = () => {\n    const [data, setData] = useState([]);\n    const [isGnomeSelected, setIsGnomeSelected] = useState(false);\n    const [selectedGnome, setSelectedGnome] = useState({});\n\n    useEffect(() => {\n        searchGnome()\n    }, []);\n\n    const onGnomeSelected = gnome => {\n        setIsGnomeSelected(true);\n        setSelectedGnome(gnome);\n    };\n\n    const searchGnome = () => {\n        fetch(`https://raw.githubusercontent.com/rrafols/mobile_test/master/data.json`)\n            .then(response => response.json())\n            .then(json => {\n                setData(json.Brastlewark);\n            })\n            .catch(error => alert(error.message));\n    };\n\n    const onClickBack = () => {\n        setIsGnomeSelected(false)\n    };\n\n    const onRowClick = (row) => {\n        setSelectedGnome(row);\n        setIsGnomeSelected(true);\n    };\n\n    const classes = useStyles();\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <Header\n                        hintText={getString(\"search\")}\n                        dataSource={data}\n                        maxSearchResults={4}\n                        onNewRequest={gnome => onGnomeSelected(gnome)}\n                    />\n                    <div className=\"col-12 d-flex justify-content-center mb-3 mt-2\">\n                        {( currentLanguage === \"en\" ) ?\n                            <Fab\n                                variant=\"extended\"\n                                size=\"small\"\n                                color=\"primary\"\n                                aria-label=\"Change language\"\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    changeLanguage(\"es\")\n                                }}\n                                className={classes.language}\n                            >\n                                <Language /> <span className=\"language-btn\">ES</span>\n                            </Fab> :\n                            <Fab\n                                variant=\"extended\"\n                                size=\"small\"\n                                color=\"primary\"\n                                aria-label=\"Change language\"\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    changeLanguage(\"en\")\n                                }}\n                                className={classes.language}\n                            >\n                                <Language /> <span className=\"language-btn\">EN</span>\n                            </Fab>}\n                    </div>\n                    {isGnomeSelected ?\n                        <div className=\"col-12 d-flex justify-content-center align-items-center content-view\">\n                            <ProfileCard\n                                profilePicture={selectedGnome.thumbnail}\n                                name={selectedGnome.name}\n                                age={selectedGnome.age}\n                                weight={selectedGnome.weight}\n                                height={selectedGnome.height}\n                                hair_color={selectedGnome.hair_color}\n                                professions={selectedGnome.professions}\n                                friends={selectedGnome.friends}\n                                setOnClickBack={onClickBack}\n                            />\n                        </div>\n                        :\n                        <div className=\"col-12\">\n                            <CitizenList\n                                items={data}\n                                setOnRowClick={row => onRowClick(row)}\n                            />\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Brastlewark is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './scenes/Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}